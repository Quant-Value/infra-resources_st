name: Dynamic Secrets Example

on:
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install jq
        run: sudo apt-get install -y jq

      - name: Prepare Dynamic Secret Names
        id: prepare
        run: |
          # Leer el archivo users.json para obtener el nombre de usuario correspondiente
          USERNAME=$(jq -r ".${GITHUB_ACTOR}" ./docs/users.json)
          
          # Verificar si el USERNAME se ha encontrado
          if [ -z "$USERNAME" ]; then
            echo "El nombre de usuario no se encuentra en el archivo users.json"
            exit 1
          fi

          # Construir los nombres dinámicos de los secretos basados en el nombre de usuario obtenido
          echo "AWS_ACCESS_KEY_ID_NAME=AWS_ACCESS_KEY_ID_${USERNAME}" | tee $GITHUB_ENV
          echo "AWS_SECRET_ACCESS_KEY_NAME=AWS_SECRET_ACCESS_KEY_${USERNAME}" | tee $GITHUB_ENV
          echo "AWS_SESSION_TOKEN_NAME=AWS_SESSION_TOKEN_${USERNAME}" | tee $GITHUB_ENV

    outputs:
      aws_access_key_id_name: ${{ steps.prepare.outputs.AWS_ACCESS_KEY_ID_NAME }}
      aws_secret_access_key_name: ${{ steps.prepare.outputs.AWS_SECRET_ACCESS_KEY_NAME }}
      aws_session_token_name: ${{ steps.prepare.outputs.AWS_SESSION_TOKEN_NAME }}

  deploy:
    needs: prepare
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID_NAME: ${{ needs.prepare.outputs.aws_access_key_id_name }}
      AWS_SECRET_ACCESS_KEY_NAME: ${{ needs.prepare.outputs.aws_secret_access_key_name }}
      AWS_SESSION_TOKEN_NAME: ${{ needs.prepare.outputs.aws_session_token_name }}
    steps:
      - uses: actions/checkout@v3

      - name: See what values the environment variables have
        run: |
          echo "AWS_ACCESS_KEY_ID_NAME: $AWS_ACCESS_KEY_ID_NAME"
          echo "AWS_SECRET_ACCESS_KEY_NAME: $AWS_SECRET_ACCESS_KEY_NAME"
          echo "AWS_SESSION_TOKEN_NAME: $AWS_SESSION_TOKEN_NAME"

      - name: Set AWS credentials from secrets
        run: |
          # Usamos los nombres de los secretos obtenidos dinámicamente
          echo "Fetching AWS credentials from secrets..."
          export AWS_ACCESS_KEY_ID=${{ secrets[env.AWS_ACCESS_KEY_ID_NAME] }}
          export AWS_SECRET_ACCESS_KEY=${{ secrets[env.AWS_SECRET_ACCESS_KEY_NAME] }}
          export AWS_SESSION_TOKEN=${{ secrets[env.AWS_SESSION_TOKEN_NAME] }}

          # Ahora se pueden utilizar las credenciales para interactuar con AWS
          aws s3 ls
