name: Destroy Infrastructure

on:
  workflow_dispatch:  # Este evento permite disparar el flujo manualmente desde la interfaz de GitHub Actions
  # Si prefieres que se ejecute automáticamente en algún evento específico, puedes cambiar esto, como por ejemplo:
  # push:
  #   branches:
  #     - main

jobs:
  destroy:
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: ./terraform  # Aquí defines tu directorio
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Install Terraform
      run: |
        sudo apt-get update && sudo apt-get install -y gnupg software-properties-common curl
        wget -O- https://apt.releases.hashicorp.com/gpg | \
        gpg --dearmor | \
        sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
        gpg --no-default-keyring \
        --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
        --fingerprint
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
        https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
        sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt update
        sudo apt-get install terraform

    - name: Terraform Init
      run: terraform init \
          -backend-config="bucket=${{ secrets.S3_BUCKET_BACKEND }}" \
          -backend-config="region=${{ secrets.AWS_REGION }}"
      working-directory: ${{ env.TF_WORKING_DIR }}  # Usando la variable de entorno

    - name: Terraform Plan (Destroy)
      run: terraform plan -destroy
      working-directory: ${{ env.TF_WORKING_DIR }}  # Usando la variable de entorno
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}  # Si usas credenciales temporales.

    - name: Destroy Infrastructure
      run: terraform destroy -auto-approve
      working-directory: ${{ env.TF_WORKING_DIR }}  # Usando la variable de entorno
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}  # Si usas credenciales temporales.
